services:
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - 9411:9411 # Zipkin UI
    restart: always
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - 9090:9090
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   restart: always
  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    ports:
      - 8888:8888 # Prometheus metrics exposer
      - 8889:8889 # Prometheus exporter
      - 4317:4317 # OTLP gRPC
      - 4318:4318 # OTLP HTTP
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config=/etc/otel-collector-config.yaml"]
    # command: ["--config", "/etc/otel-collector-config.yaml"]
    restart: always
    depends_on:
      - zipkin
  service_a:
    image: golang:1.24
    container_name: service_a
    environment:
      - SERVICE_B_HOST=http://service_b
      - SERVICE_B_PORT=8081
    restart: always
    working_dir: /app
    ports:
      - 8080:8080
    command: >
      sh -c "go mod download && go run main.go"
    volumes:
      - ./ServiceA:/app
  service_b:
    image: golang:1.24
    container_name: service_b
    restart: always
    working_dir: /app
    ports:
      - 8081:8081
    command: >
      sh -c "go mod download && go run main.go"
    volumes:
      - ./ServiceB:/app
